// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AppPicker snapshot matches 1`] = `
Array [
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#f8f4f4",
          "borderRadius": 25,
          "flexDirection": "row",
          "marginVertical": 10,
          "padding": 15,
          "width": "100%",
        },
        Object {
          "width": "100%",
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#0c0c0c",
            "fontFamily": "Avenir",
            "fontSize": 18,
          },
          Object {
            "color": "#6e6969",
            "flex": 1,
          },
        ]
      }
    />
    <View
      color="#6e6969"
      name="chevron-down"
      size={20}
    />
  </View>,
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    visible={false}
  >
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Array [
          Object {
            "flex": 1,
            "paddingTop": 0,
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "flex": 1,
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityRole="button"
          accessibilityState={Object {}}
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#007AFF",
                    "fontSize": 18,
                    "margin": 8,
                    "textAlign": "center",
                  },
                ]
              }
            >
              Close
            </Text>
          </View>
        </View>
        <RCTScrollView
          disableVirtualization={false}
          getItem={[Function]}
          getItemCount={[Function]}
          horizontal={false}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          onContentSizeChange={[Function]}
          onEndReachedThreshold={2}
          onLayout={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          updateCellsBatchingPeriod={50}
          viewabilityConfigCallbackPairs={Array []}
          windowSize={21}
        >
          <View />
        </RCTScrollView>
      </View>
    </RCTSafeAreaView>
  </Modal>,
]
`;
