// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ListingEditScreen snapshot matches 1`] = `
<Screen
  style={
    Object {
      "alignSelf": "center",
      "marginTop": 10,
      "width": "95%",
    }
  }
>
  <AppForm
    initialValues={
      Object {
        "category": null,
        "description": "",
        "price": "",
        "title": "",
      }
    }
    onSubmit={[Function]}
    validationSchema={
      ObjectSchema {
        "_blacklist": ReferenceSet {
          "list": Set {},
          "refs": Map {},
        },
        "_blacklistError": undefined,
        "_excludedEdges": Array [],
        "_nodes": Array [
          "category",
          "description",
          "price",
          "title",
        ],
        "_sortErrors": [Function],
        "_typeError": [Function],
        "_whitelist": ReferenceSet {
          "list": Set {},
          "refs": Map {},
        },
        "_whitelistError": undefined,
        "conditions": Array [],
        "deps": Array [],
        "exclusiveTests": Object {},
        "fields": Object {
          "category": ObjectSchema {
            "_blacklist": ReferenceSet {
              "list": Set {},
              "refs": Map {},
            },
            "_blacklistError": undefined,
            "_excludedEdges": Array [],
            "_nodes": Array [],
            "_sortErrors": [Function],
            "_typeError": [Function],
            "_whitelist": ReferenceSet {
              "list": Set {},
              "refs": Map {},
            },
            "_whitelistError": undefined,
            "conditions": Array [],
            "deps": Array [],
            "exclusiveTests": Object {
              "required": true,
            },
            "fields": Object {},
            "spec": Object {
              "abortEarly": true,
              "label": "Category",
              "nullable": true,
              "presence": "required",
              "recursive": true,
              "strict": false,
              "strip": false,
            },
            "tests": Array [
              [Function],
            ],
            "transforms": Array [
              [Function],
            ],
            "type": "object",
          },
          "description": StringSchema {
            "_blacklist": ReferenceSet {
              "list": Set {},
              "refs": Map {},
            },
            "_blacklistError": undefined,
            "_typeError": [Function],
            "_whitelist": ReferenceSet {
              "list": Set {},
              "refs": Map {},
            },
            "_whitelistError": undefined,
            "conditions": Array [],
            "deps": Array [],
            "exclusiveTests": Object {},
            "spec": Object {
              "abortEarly": true,
              "label": "description",
              "nullable": false,
              "presence": "optional",
              "recursive": true,
              "strict": false,
              "strip": false,
            },
            "tests": Array [],
            "transforms": Array [
              [Function],
            ],
            "type": "string",
          },
          "price": NumberSchema {
            "_blacklist": ReferenceSet {
              "list": Set {},
              "refs": Map {},
            },
            "_blacklistError": undefined,
            "_typeError": [Function],
            "_whitelist": ReferenceSet {
              "list": Set {},
              "refs": Map {},
            },
            "_whitelistError": undefined,
            "conditions": Array [],
            "deps": Array [],
            "exclusiveTests": Object {
              "max": true,
              "min": true,
              "required": true,
            },
            "spec": Object {
              "abortEarly": true,
              "label": "Price",
              "nullable": false,
              "presence": "required",
              "recursive": true,
              "strict": false,
              "strip": false,
            },
            "tests": Array [
              [Function],
              [Function],
              [Function],
            ],
            "transforms": Array [
              [Function],
            ],
            "type": "number",
          },
          "title": StringSchema {
            "_blacklist": ReferenceSet {
              "list": Set {},
              "refs": Map {},
            },
            "_blacklistError": undefined,
            "_typeError": [Function],
            "_whitelist": ReferenceSet {
              "list": Set {},
              "refs": Map {},
            },
            "_whitelistError": undefined,
            "conditions": Array [],
            "deps": Array [],
            "exclusiveTests": Object {
              "min": true,
              "required": true,
            },
            "spec": Object {
              "abortEarly": true,
              "label": "Title",
              "nullable": false,
              "presence": "required",
              "recursive": true,
              "strict": false,
              "strip": false,
            },
            "tests": Array [
              [Function],
              [Function],
            ],
            "transforms": Array [
              [Function],
            ],
            "type": "string",
          },
        },
        "spec": Object {
          "abortEarly": true,
          "nullable": false,
          "presence": "optional",
          "recursive": true,
          "strict": false,
          "strip": false,
        },
        "tests": Array [],
        "transforms": Array [
          [Function],
        ],
        "type": "object",
      }
    }
  >
    <AppFormField
      maxLength={255}
      name="title"
      placeholder="Title"
    />
    <AppFormField
      keyboardType="numeric"
      maxLength={8}
      name="price"
      placeholder="Price"
      width={120}
    />
    <AppFormPicker
      items={
        Array [
          Object {
            "label": "Furniture",
            "value": 1,
          },
          Object {
            "label": "Clothing",
            "value": 2,
          },
          Object {
            "label": "Camera",
            "value": 3,
          },
        ]
      }
      name="category"
      placeholder="Category"
      width="50%"
    />
    <AppFormField
      maxLength={255}
      multiline={true}
      name="description"
      numberOfLines={3}
      placeholder="Description"
    />
    <SubmitButton
      title="Post"
    />
  </AppForm>
</Screen>
`;
